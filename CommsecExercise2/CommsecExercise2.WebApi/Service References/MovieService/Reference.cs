//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CommsecExercise2.WebApi.MovieService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieData", Namespace="http://schemas.datacontract.org/2004/07/MoviesLibrary")]
    [System.SerializableAttribute()]
    public partial class MovieData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string[] _castField;
        
        private string _classificationField;
        
        private string _genreField;
        
        private int _movieIdField;
        
        private int _ratingField;
        
        private int _releaseDateField;
        
        private string _titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] _cast {
            get {
                return this._castField;
            }
            set {
                if ((object.ReferenceEquals(this._castField, value) != true)) {
                    this._castField = value;
                    this.RaisePropertyChanged("_cast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _classification {
            get {
                return this._classificationField;
            }
            set {
                if ((object.ReferenceEquals(this._classificationField, value) != true)) {
                    this._classificationField = value;
                    this.RaisePropertyChanged("_classification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _genre {
            get {
                return this._genreField;
            }
            set {
                if ((object.ReferenceEquals(this._genreField, value) != true)) {
                    this._genreField = value;
                    this.RaisePropertyChanged("_genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _movieId {
            get {
                return this._movieIdField;
            }
            set {
                if ((this._movieIdField.Equals(value) != true)) {
                    this._movieIdField = value;
                    this.RaisePropertyChanged("_movieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _rating {
            get {
                return this._ratingField;
            }
            set {
                if ((this._ratingField.Equals(value) != true)) {
                    this._ratingField = value;
                    this.RaisePropertyChanged("_rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _releaseDate {
            get {
                return this._releaseDateField;
            }
            set {
                if ((this._releaseDateField.Equals(value) != true)) {
                    this._releaseDateField = value;
                    this.RaisePropertyChanged("_releaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _title {
            get {
                return this._titleField;
            }
            set {
                if ((object.ReferenceEquals(this._titleField, value) != true)) {
                    this._titleField = value;
                    this.RaisePropertyChanged("_title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieService.IMovieService")]
    public interface IMovieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Get", ReplyAction="http://tempuri.org/IMovieService/GetResponse")]
        CommsecExercise2.WebApi.MovieService.MovieData[] Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Get", ReplyAction="http://tempuri.org/IMovieService/GetResponse")]
        System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> GetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetById", ReplyAction="http://tempuri.org/IMovieService/GetByIdResponse")]
        CommsecExercise2.WebApi.MovieService.MovieData GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetById", ReplyAction="http://tempuri.org/IMovieService/GetByIdResponse")]
        System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetSorted", ReplyAction="http://tempuri.org/IMovieService/GetSortedResponse")]
        CommsecExercise2.WebApi.MovieService.MovieData[] GetSorted(string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetSorted", ReplyAction="http://tempuri.org/IMovieService/GetSortedResponse")]
        System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> GetSortedAsync(string fieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Search", ReplyAction="http://tempuri.org/IMovieService/SearchResponse")]
        CommsecExercise2.WebApi.MovieService.MovieData[] Search(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Search", ReplyAction="http://tempuri.org/IMovieService/SearchResponse")]
        System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> SearchAsync(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Insert", ReplyAction="http://tempuri.org/IMovieService/InsertResponse")]
        int Insert(CommsecExercise2.WebApi.MovieService.MovieData movieData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Insert", ReplyAction="http://tempuri.org/IMovieService/InsertResponse")]
        System.Threading.Tasks.Task<int> InsertAsync(CommsecExercise2.WebApi.MovieService.MovieData movieData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Update", ReplyAction="http://tempuri.org/IMovieService/UpdateResponse")]
        void Update(CommsecExercise2.WebApi.MovieService.MovieData movieData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/Update", ReplyAction="http://tempuri.org/IMovieService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(CommsecExercise2.WebApi.MovieService.MovieData movieData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceChannel : CommsecExercise2.WebApi.MovieService.IMovieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceClient : System.ServiceModel.ClientBase<CommsecExercise2.WebApi.MovieService.IMovieService>, CommsecExercise2.WebApi.MovieService.IMovieService {
        
        public MovieServiceClient() {
        }
        
        public MovieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CommsecExercise2.WebApi.MovieService.MovieData[] Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> GetAsync() {
            return base.Channel.GetAsync();
        }
        
        public CommsecExercise2.WebApi.MovieService.MovieData GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public CommsecExercise2.WebApi.MovieService.MovieData[] GetSorted(string fieldName) {
            return base.Channel.GetSorted(fieldName);
        }
        
        public System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> GetSortedAsync(string fieldName) {
            return base.Channel.GetSortedAsync(fieldName);
        }
        
        public CommsecExercise2.WebApi.MovieService.MovieData[] Search(string searchTerm) {
            return base.Channel.Search(searchTerm);
        }
        
        public System.Threading.Tasks.Task<CommsecExercise2.WebApi.MovieService.MovieData[]> SearchAsync(string searchTerm) {
            return base.Channel.SearchAsync(searchTerm);
        }
        
        public int Insert(CommsecExercise2.WebApi.MovieService.MovieData movieData) {
            return base.Channel.Insert(movieData);
        }
        
        public System.Threading.Tasks.Task<int> InsertAsync(CommsecExercise2.WebApi.MovieService.MovieData movieData) {
            return base.Channel.InsertAsync(movieData);
        }
        
        public void Update(CommsecExercise2.WebApi.MovieService.MovieData movieData) {
            base.Channel.Update(movieData);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(CommsecExercise2.WebApi.MovieService.MovieData movieData) {
            return base.Channel.UpdateAsync(movieData);
        }
    }
}
